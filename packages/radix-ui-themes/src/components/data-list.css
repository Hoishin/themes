@breakpoints {
  .DataListRoot.gap-0 {
    --data-list-gap: 0px;
  }
  .DataListRoot.gap-1 {
    --data-list-gap: var(--space-1);
  }
  .DataListRoot.gap-2 {
    --data-list-gap: var(--space-2);
  }
  .DataListRoot.gap-3 {
    --data-list-gap: var(--space-3);
  }
  .DataListRoot.gap-4 {
    --data-list-gap: var(--space-4);
  }
  .DataListRoot.gap-5 {
    --data-list-gap: var(--space-5);
  }
  .DataListRoot.gap-6 {
    --data-list-gap: var(--space-6);
  }
  .DataListRoot.gap-7 {
    --data-list-gap: var(--space-7);
  }
  .DataListRoot.gap-8 {
    --data-list-gap: var(--space-8);
  }
  .DataListRoot.gap-9 {
    --data-list-gap: var(--space-9);
  }
}

.DataListItem {
  position: relative;
  box-sizing: border-box;
  display: flex;
}

@breakpoints {
  .direction-column .DataListItem {
    flex-direction: column;
    gap: var(--space-1);
  }
  .direction-row .DataListItem {
    flex-direction: row;
    gap: var(--data-list-gap);
    padding: 0;
  }
}

.DataListLabel {
  color: var(--gray-a11);
  box-sizing: border-box;
  display: block;
}

@breakpoints {
  .direction-column .DataListLabel {
    white-space: normal;
    padding: 0;
    width: auto;
  }
  .direction-row .DataListLabel {
    white-space: nowrap;
    width: var(--data-list-label-width);
    flex-shrink: 0;
  }
}

.DataListData {
  box-sizing: border-box;
  margin: 0;
  display: block;
}

@breakpoints {
  .direction-column .DataListData,
  .direction-column-reverse .DataListData {
    padding: 0;
  }
}

.DataListDataInner {
  display: flex;
}

/*
   * Improve alignment when nesting flex elements with Text. Prepending contents with a text character
   * enforces default baseline alignment when child elements contain text within. The character used is
   * a zero-width joiner, which is invisible, and pseudo-elements aren't copyable.
   */
.DataListDataInner::before {
  content: '\200D';
}

.DataListDataInnerContents {
  display: block;
}
